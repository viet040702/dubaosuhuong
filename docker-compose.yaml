version: "3"

services:
  app-api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: app-api
    restart: "always"
    ports:
      - 3001:3001
    volumes:
      - ./backend:/app/backend
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - ./backend/.env
    environment:
      - DB_HOST=mysql
      - REDIS_HOST=redis
      - DB_NAME=job-management
      - DB_USERNAME=root
      - DB_PASSWORD=root@
    networks:
      - master-network

  app-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: app-frontend
    restart: "always"
    ports:
      - 3000:5173
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
    depends_on:
      - app-api
    networks:
      - master-network


  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - master-network

  crawl-data:
    platform: linux/amd64
    build:
      context: ./crawl-data
      dockerfile: Dockerfile
    container_name: crawl-data
    volumes:
      - ./crawl-data:/app/crawl-data
    networks:
      - master-network

  mysql:
    image: mysql:8.0
    container_name: app-sql
    restart: "always"
    environment:
      MYSQL_DATABASE: job-management
      MYSQL_ROOT_PASSWORD: root@
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin@
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    ports:
      - 3306:3306
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - master-network

  redis:
    image: redis:6.0.5-alpine
    container_name: app-redis
    command: redis-server
    ports:
      - 6379:6379
    restart: "always"
    volumes:
      - ./redis/data:/var/lib/redis
    networks:
      - master-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

networks:
  master-network:
    driver: bridge
volumes:
  rabbitmq:

